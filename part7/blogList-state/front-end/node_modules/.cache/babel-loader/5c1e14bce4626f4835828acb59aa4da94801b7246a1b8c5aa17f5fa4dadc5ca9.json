{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport blogServices from \"../services/blogs\";\nconst blog = createSlice({\n  name: \"blog\",\n  initialState: {\n    blogList: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchBlogListStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBlogListSuccess: (state, action) => {\n      state.loading = false;\n      state.blogList = action.payload;\n    },\n    fetchBlogListFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const fetchBlogList = () => {\n  return async dispatch => {\n    dispatch(fetchBlogListStart());\n    try {\n      const response = await blogServices.getAll();\n      dispatch(fetchBlogListSuccess(response));\n    } catch (error) {\n      dispatch(fetchBlogListFailure(error.message));\n    }\n  };\n};\nexport const {\n  setBlogList\n} = blog.actions;\nexport default blog.reducer;","map":{"version":3,"names":["createSlice","blogServices","blog","name","initialState","blogList","loading","error","reducers","fetchBlogListStart","state","fetchBlogListSuccess","action","payload","fetchBlogListFailure","fetchBlogList","dispatch","response","getAll","message","setBlogList","actions","reducer"],"sources":["/Users/aymaneharkati/Desktop/stack/Full-Stack-Open/part7/blogList-state/front-end/src/reducers/blogRedcuers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport blogServices from \"../services/blogs\";\n\n\nconst blog = createSlice({\n  name: \"blog\",\n  initialState: {\n    blogList: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    fetchBlogListStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBlogListSuccess: (state, action) => {\n      state.loading = false;\n      state.blogList = action.payload;\n    },\n    fetchBlogListFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const fetchBlogList = () => {\n  return async (dispatch) => {\n    dispatch(fetchBlogListStart());\n    try {\n      const response = await blogServices.getAll();\n      dispatch(fetchBlogListSuccess(response));\n    } catch (error) {\n      dispatch(fetchBlogListFailure(error.message));\n    }\n  };\n};\n\nexport const {setBlogList} = blog.actions\n\nexport default blog.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAG5C,MAAMC,IAAI,GAAGF,WAAW,CAAC;EACvBG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkB,EAAGC,KAAK,IAAK;MAC7BA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC;IACDI,oBAAoB,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,oBAAoB,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACP,kBAAkB,EAAE,CAAC;IAC9B,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMhB,YAAY,CAACiB,MAAM,EAAE;MAC5CF,QAAQ,CAACL,oBAAoB,CAACM,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdS,QAAQ,CAACF,oBAAoB,CAACP,KAAK,CAACY,OAAO,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EAACC;AAAW,CAAC,GAAGlB,IAAI,CAACmB,OAAO;AAEzC,eAAenB,IAAI,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}