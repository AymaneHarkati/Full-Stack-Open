{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport blogServices from \"../services/blogs\";\nconst blog = createSlice({\n  name: \"blog\",\n  initialState: {\n    blogList: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchBlogListStart: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBlogListSuccess: (state, action) => {\n      state.loading = false;\n      state.blogList = action.payload;\n    },\n    fetchBlogListFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createBlog(state, action) {\n      state.loading = false;\n      return state.blogList.concat(action.payload);\n    }\n  }\n});\nexport const fetchBlogList = () => {\n  return async dispatch => {\n    try {\n      const response = await blogServices.getAll();\n      dispatch(fetchBlogListSuccess(response));\n    } catch (error) {\n      dispatch(fetchBlogListFailure(error.message));\n    }\n  };\n};\nexport const addBlogList = blog => {\n  return async dispatch => {\n    try {\n      const resp = await blogServices.create(blog);\n      dispatch(createBlog(resp));\n    } catch (error) {\n      dispatch(fetchBlogListFailure(error.message));\n    }\n  };\n};\nexport const {\n  fetchBlogListStart,\n  fetchBlogListSuccess,\n  fetchBlogListFailure,\n  createBlog\n} = blog.actions;\nexport default blog.reducer;","map":{"version":3,"names":["createSlice","blogServices","blog","name","initialState","blogList","loading","error","reducers","fetchBlogListStart","state","action","fetchBlogListSuccess","payload","fetchBlogListFailure","createBlog","concat","fetchBlogList","dispatch","response","getAll","message","addBlogList","resp","create","actions","reducer"],"sources":["/Users/aymaneharkati/Desktop/stack/Full-Stack-Open/part7/blogList-state/front-end/src/reducers/blogRedcuers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport blogServices from \"../services/blogs\";\n\n\nconst blog = createSlice({\n  name: \"blog\",\n  initialState: {\n    blogList: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    fetchBlogListStart: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBlogListSuccess: (state, action) => {\n      state.loading = false;\n      state.blogList = action.payload;\n    },\n    fetchBlogListFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createBlog(state, action) {\n      state.loading= false;\n      return state.blogList.concat(action.payload)\n    }\n  },\n});\n\nexport const fetchBlogList = () => {\n  return async (dispatch) => {\n    try {\n      const response = await blogServices.getAll();\n      dispatch(fetchBlogListSuccess(response));\n    } catch (error) {\n      dispatch(fetchBlogListFailure(error.message));\n    }\n  };\n};\n\nexport const addBlogList = (blog) => {\n  return async (dispatch) => {\n    try{\n          const resp = await blogServices.create(blog)\n      dispatch(createBlog(resp))\n    }catch(error){\n      dispatch(fetchBlogListFailure(error.message))\n    }\n  }\n}\n\nexport const {\n  fetchBlogListStart,\n  fetchBlogListSuccess,\n  fetchBlogListFailure,\n  createBlog\n} = blog.actions;\n\nexport default blog.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAG5C,MAAMC,IAAI,GAAGF,WAAW,CAAC;EACvBG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC;IACDK,oBAAoB,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACE,OAAO;IACjC,CAAC;IACDC,oBAAoB,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDE,UAAU,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACJ,OAAO,GAAE,KAAK;MACpB,OAAOI,KAAK,CAACL,QAAQ,CAACW,MAAM,CAACL,MAAM,CAACE,OAAO,CAAC;IAC9C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMI,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,YAAY,CAACmB,MAAM,EAAE;MAC5CF,QAAQ,CAACN,oBAAoB,CAACO,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdW,QAAQ,CAACJ,oBAAoB,CAACP,KAAK,CAACc,OAAO,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIpB,IAAI,IAAK;EACnC,OAAO,MAAOgB,QAAQ,IAAK;IACzB,IAAG;MACG,MAAMK,IAAI,GAAG,MAAMtB,YAAY,CAACuB,MAAM,CAACtB,IAAI,CAAC;MAChDgB,QAAQ,CAACH,UAAU,CAACQ,IAAI,CAAC,CAAC;IAC5B,CAAC,QAAMhB,KAAK,EAAC;MACXW,QAAQ,CAACJ,oBAAoB,CAACP,KAAK,CAACc,OAAO,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EACXZ,kBAAkB;EAClBG,oBAAoB;EACpBE,oBAAoB;EACpBC;AACF,CAAC,GAAGb,IAAI,CAACuB,OAAO;AAEhB,eAAevB,IAAI,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}